---
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
type: Opaque
stringData:
  username: root  # 데이터베이스 사용자 이름
  password: rootpassword  # 데이터베이스 비밀번호

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
type: Opaque
stringData:
  secret: "3c84e62c46e5438e9d12e28a9876591bc34e4e92a3a489b749ab2d9c9e367d89"  # JWT 시크릿 키

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
data:
  application.properties: |
    spring.application.name=user-service
    spring.datasource.url=jdbc:mysql://mysql:3306/sog_db
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    spring.jpa.hibernate.ddl-auto=none
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
    spring.jpa.properties.hibernate.jdbc.time_zone=UTC
    spring.jpa.show-sql=true
    spring.data.redis.host=redis
    spring.data.redis.port=6379
    jwt.access-token-expiry=600000
    jwt.refresh-token-expiry=86400000
    logging.level.org.hibernate.SQL=debug
    logging.level.com.sog.user.infrastructure.security.LoginFilter=debug
    server.error.include-message=always
    server.error.include-binding-errors=always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: zlxldgus123/user:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: user-service-config

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
