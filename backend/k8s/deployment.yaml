---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-and-user-service-ingress
  namespace: backcd
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - ssafy11s.com
    secretName: argocd-server-tls
  rules:
  - host: ssafy11s.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: backcd
spec:
  type: NodePort
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: backcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: zlxldgus123/user:latest  # 귀하의 실제 이미지로 교체해야 합니다
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql:3306/sog_db
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret