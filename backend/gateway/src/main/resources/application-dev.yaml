spring:
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # 모든 경로에 대해 CORS 허용
            allowedOrigins:
              - "https://ssafy11s.com"  # 허용할 도메인
              - "http://localhost:3000"  # 개발 환경에서 허용할 로컬 도메인
            allowedMethods: # 허용할 HTTP 메서드
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"  # 모든 헤더 허용
            allowCredentials: true  # 인증 정보(Cookie 등) 허용
            maxAge: 3600  # OPTIONS 요청을 1시간 동안 캐시
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리 활성화
      routes:
        - id: gateway-status
          uri: http://localhost:8080  # Gateway 서비스 자체의 주소
          predicates:
            - Path=/status
        - id: user-service
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/user/**
        - id: stock-service
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/stock/**
        - id: news-service
          uri: http://news-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/news/**

jwt:
  secret: "3c84e62c46e5438e9d12e28a9876591bc34e4e92a3a489b749ab2d9c9e367d89"  # Kubernetes Secret에서 JWT 가져오기

springdoc:
  swagger-ui:
    urls:
      - name: user-service
        url: /user-service/v3/api-docs
      - name: stock-service
        url: /stock-service/v3/api-docs
      - name: news-service
        url: /news-service/v3/api-docs

management:
  endpoints:
    web:
      exposure:
        include: gateway, health  # 유효한 엔드포인트 이름
  endpoint:
    health:
      show-details: always  # 헬스체크에서 자세한 정보 제공

logging:
  level:
    com.example.gateway.config.LoggingFilterConfig: DEBUG  # 필터 로그를 디버그 레벨로 설정
    org.springframework.cloud.gateway: DEBUG  # Spring Cloud Gateway 전체 디버그 로그
