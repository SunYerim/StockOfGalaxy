spring:
  cloud:
    gateway:
      filter:
        remove-non-proxy-headers:
          headers:
            - Proxy-Authenticate
            - Proxy-Authorization
            - Keep-Alive
            - TE
            - Trailer
            - Transfer-Encoding
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "https://ssafy11s.com"
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
              - "Accept"
            allowCredentials: true
            maxAge: 3600
      discovery:
        locator:
          enabled: true
      routes:
        - id: authenticated-routes
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/*/auth/**
          filters:
            - JwtAuthenticationFilter

        - id: gateway-status
          uri: http://localhost:8080
          predicates:
            - Path=/status

        - id: user-service
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/user/**

        - id: stock-service
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/stock/**

        - id: stock-rocket-service
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/rockets/**

        - id: stock-service-websocket
          uri: ws://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/ws/**
          filters:
            - RemoveRequestHeader=Sec-WebSocket-Protocol
            - AddRequestHeader=Connection, Upgrade
            - AddRequestHeader=Upgrade, websocket

        - id: news-service
          uri: http://news-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/news/**

        - id: user-service-swagger
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/user-service/v3/api-docs
            - Path=/user-service/swagger-ui/**
          filters:
            - RewritePath=/user-service(?<segment>/.*), ${segment}

        - id: stock-service-swagger
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/stock-service/v3/api-docs
            - Path=/stock-service/swagger-ui/**
          filters:
            - RewritePath=/stock-service(?<segment>/.*), ${segment}

        - id: news-service-swagger
          uri: http://news-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/news-service/v3/api-docs
            - Path=/news-service/swagger-ui/**
          filters:
            - RewritePath=/news-service(?<segment>/.*), ${segment}

jwt:
  secret: ${JWT_SECRET:default-secret}

springdoc:
  swagger-ui:
    urls:
      - name: user-service
        url: /user-service/v3/api-docs
      - name: stock-service
        url: /stock-service/v3/api-docs
      - name: news-service
        url: /news-service/v3/api-docs

management:
  endpoints:
    web:
      exposure:
        include: gateway, health
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

# Elastic APM 관련 설정
elastic:
  apm:
    service_name: "gateway-service" # APM에 등록될 서비스 이름
    server_urls: "http://3.38.183.146:8200" # APM 서버 URL
    application_packages: "com.sog" # 패키지 이름 설정
    enable_framework_auto_detection: true # WebFlux 자동 감지 활성화
    distributed_tracing: true # 분산 추적 활성화
    capture_body: "all" # 모든 요청 본문 캡처
    capture_headers: true # HTTP 헤더 캡처 활성화
# spring:
#   data:
#     redis:
#       host: redis  # Redis 서버의 호스트명
#       port: 6379   # Redis 서버의 포트 번호
#   cloud:
#     gateway:
#       filter:
#         remove-non-proxy-headers:
#           headers:
#             - Proxy-Authenticate
#             - Proxy-Authorization
#             - Keep-Alive
#             - TE
#             - Trailer
#             - Transfer-Encoding
#       globalcors:
#         corsConfigurations:
#           '[/**]':
#             allowedOrigins:
#               - "https://ssafy11s.com"
#               - "http://localhost:3000"
#             allowedMethods:
#               - GET
#               - POST
#               - PUT
#               - DELETE
#               - OPTIONS
#             allowedHeaders:
#               - "Content-Type"
#               - "Authorization"
#               - "X-Requested-With"
#               - "Accept"
#             allowCredentials: true
#             maxAge: 3600
#       discovery:
#         locator:
#           enabled: true  # Discovery Locator 활성화
#       routes:
#         - id: authenticated-routes
#           uri: http://user-service.backcd.svc.cluster.local:80
#           predicates:
#             - Path=/api/*/auth/**
#           filters:
#             - JwtAuthenticationFilter  # JWT 인증 필터 적용

#         - id: user-service
#           uri: http://user-service.backcd.svc.cluster.local:80
#           predicates:
#             - Path=/api/user/**
#           filters:
#             - name: CachingGatewayFilterFactory  # 필터 이름 명시

#         - id: stock-service
#           uri: http://stock-service.backcd.svc.cluster.local:80
#           predicates:
#             - Path=/api/stock/**
#           filters:
#             - name: CachingGatewayFilterFactory  # 캐싱 필터 적용

#         - id: news-service
#           uri: http://news-service.backcd.svc.cluster.local:80
#           predicates:
#             - Path=/api/news/**
#           filters:
#             - name: CachingGatewayFilterFactory  # 캐싱 필터 적용

# jwt:
#   secret: ${JWT_SECRET:default-secret}  # JWT 시크릿 키 설정

# management:
#   endpoints:
#     web:
#       exposure:
#         include: gateway, health
#   endpoint:
#     health:
#       show-details: always

# logging:
#   level:
#     org.springframework.cloud.gateway: DEBUG  # 게이트웨이 디버그 로그 설정
