spring:
  data:
    redis:
      host: redis  # Redis 서버의 호스트명
      port: 6379   # Redis 서버의 포트 번호
  cloud:
    gateway:
      filter:
        remove-non-proxy-headers:
          headers:
            - Proxy-Authenticate
            - Proxy-Authorization
            - Keep-Alive
            - TE
            - Trailer
            - Transfer-Encoding
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "https://ssafy11s.com"
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
              - "Accept"
            allowCredentials: true
            maxAge: 3600
      discovery:
        locator:
          enabled: true  # Discovery Locator 활성화
      routes:
        - id: authenticated-routes
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/*/auth/**
          filters:
            - JwtAuthenticationFilter  # JWT 인증 필터 적용

        - id: user-service
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/user/**
          filters:
            - name: CachingGatewayFilterFactory  # 필터 이름 명시

        - id: stock-service
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/stock/**
          filters:
            - name: CachingGatewayFilterFactory  # 캐싱 필터 적용

        - id: news-service
          uri: http://news-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/news/**
          filters:
            - name: CachingGatewayFilterFactory  # 캐싱 필터 적용

jwt:
  secret: ${JWT_SECRET:default-secret}  # JWT 시크릿 키 설정

management:
  endpoints:
    web:
      exposure:
        include: gateway, health
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.cloud.gateway: DEBUG  # 게이트웨이 디버그 로그 설정
