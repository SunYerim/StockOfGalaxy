spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리 활성화
      routes:
        - id: openapi
          uri: http://localhost:8080
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
        - id: swagger-ui
          uri: http://localhost:8080
          predicates:
            - Path=/swagger-ui/**
          filters:
            - RewritePath=/swagger-ui(?<path>.*), /swagger-ui.html
        - id: gateway-status
          uri: http://localhost:8080  # Gateway 서비스 자체의 주소
          predicates:
            - Path=/status
        - id: user-service
          uri: http://user-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/user/**,/user/v3/api-docs/**
          filters:
            - RewritePath=/api/user/(?<segment>.*), /$\{segment}
            - RewritePath=/user/v3/api-docs/(?<path>.*), /v3/api-docs/$\{path}
        - id: stock-service
          uri: http://stock-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/stock/**,/stock/v3/api-docs/**
          filters:
            - RewritePath=/api/stock/(?<segment>.*), /$\{segment}
            - RewritePath=/stock/v3/api-docs/(?<path>.*), /v3/api-docs/$\{path}
        - id: news-service
          uri: http://news-service.backcd.svc.cluster.local:80
          predicates:
            - Path=/api/news/**,/news/v3/api-docs/**
          filters:
            - RewritePath=/api/news/(?<segment>.*), /$\{segment}
            - RewritePath=/news/v3/api-docs/(?<path>.*), /v3/api-docs/$\{path}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    urls:
      - url: /v3/api-docs/user
        name: User API
      - url: /v3/api-docs/stock
        name: Stock API
      - url: /v3/api-docs/news
        name: News API
  api-docs:
    path: /v3/api-docs
    enabled: true

jwt:
  secret: ${JWT_SECRET:3c84e62c46e5438e9d12e28a9876591bc34e4e92a3a489b749ab2d9c9e367d89}  # 환경 변수에서 JWT 시크릿 가져오기, 없으면 기본값 사용

management:
  endpoints:
    web:
      exposure:
        include: gateway, health  # 유효한 엔드포인트 이름
  endpoint:
    health:
      show-details: always  # 헬스체크에서 자세한 정보 제공

logging:
  level:
    com.sog.gateway.config.LoggingFilterConfig: DEBUG  # 필터 로그를 디버그 레벨로 설정
    org.springframework.cloud.gateway: DEBUG  # Spring Cloud Gateway 전체 디버그 로그
