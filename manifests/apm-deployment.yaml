apiVersion: apps/v1
kind: Deployment
metadata:
  name: apm-server
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apm-server
  template:
    metadata:
      labels:
        app: apm-server
    spec:
      containers:
        - name: apm-server
          image: docker.elastic.co/apm/apm-server:8.3.2
          ports:
            - containerPort: 8200
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://3.38.183.146:30193"
            - name: ELASTICSEARCH_USERNAME
              value: "elastic"
            - name: ELASTICSEARCH_PASSWORD
              value: "ua8747ll"
            - name: KIBANA_HOST
              value: "http://3.38.183.146:30056"
            - name: KIBANA_USERNAME
              value: "kibana_system"
            - name: KIBANA_PASSWORD
              value: "ua8747ll"
          # volumeMounts:
          #   - name: apm-server-config-volume
          #     mountPath: /etc/apm-server/apm-server.yml
          #     subPath: apm-server.yml
      # volumes:
      #   - name: apm-server-config-volume
      #     configMap:
      #       name: apm-server-config

---
apiVersion: v1
kind: Service
metadata:
  name: apm-server
  namespace: dev  # 필요한 네임스페이스로 수정
spec:
  type: NodePort
  ports:
    - port: 8200
      targetPort: 8200
      nodePort: 30192
  selector:
    app: apm-server

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: apm-server-config
#   namespace: dev
# data:
#   apm-server.yml: |
#     output.elasticsearch:
#       hosts: ["http://elasticsearch:9200"]
#       username: "elastic"
#       password: "ua8747ll"  # 설정된 비밀번호
#     setup.kibana:
#       host: "http://3.38.183.146:30056"
#       username: "kibana_system"
#       password: "ua8747ll"  # Kibana 비밀번호
#     apm-server:
#       host: "0.0.0.0:8200"
#     http.host: "0.0.0.0"
#     http.port: 8200
