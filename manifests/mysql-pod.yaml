apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: backcd  # 네임스페이스 추가
data:
  my.cnf: |
    [mysqld]
    ft_min_word_len = 2
    ft_stopword_file = ""
    innodb_buffer_pool_size = 2G  # InnoDB 버퍼 풀 크기 2GB로 설정
    innodb_flush_log_at_trx_commit = 2  # 트랜잭션 커밋 시 로그 플러시 동작

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: backcd  # 네임스페이스 추가
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS sog_db;

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: backcd  # 네임스페이스 추가
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "rootpassword"  # MySQL root 비밀번호
        - name: MYSQL_DATABASE
          value: "sog_db"  # 자동으로 생성할 데이터베이스 이름
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-init-script
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-config-volume
          mountPath: /etc/mysql/my.cnf  # ConfigMap을 MySQL 설정 파일로 마운트
          subPath: my.cnf
        resources:
          limits:
            memory: "4Gi"  # 메모리 제한 4Gi
          requests:
            memory: "2Gi"  # 최소 요청 메모리 2Gi
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-init-script
        configMap:
          name: mysql-init-script
      - name: mysql-config-volume
        configMap:
          name: mysql-config
      nodeSelector:
        kubernetes.io/hostname: ip-172-26-0-238
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
