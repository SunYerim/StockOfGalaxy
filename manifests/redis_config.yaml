apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: backcd  # 네임스페이스 추가
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: backcd  # 네임스페이스 추가
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        args: ["redis-server", "/usr/local/etc/redis/redis.conf"]
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pv-claim
      - name: redis-config
        configMap:
          name: redis-config
      nodeSelector:
        kubernetes.io/hostname: ip-172-26-0-238
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv-node1
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: "/mnt/data/redis"  # 로컬 디스크 경로
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - ip-172-26-0-238

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
  namespace: backcd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: backcd
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
